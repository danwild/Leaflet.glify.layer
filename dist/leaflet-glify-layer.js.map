{"version":3,"file":"leaflet-glify-layer.js","sources":["../src/js/L.Glify.Layer.js"],"sourcesContent":["import glify from 'leaflet.glify';\nimport sortWorker from 'web-worker:./sortWorker';\n\nconst GlifyLayer = L.Layer.extend({\n\n\t/*------------------------------------ LEAFLET SPECIFIC ------------------------------------------*/\n\n\t_map: null,\n\n\t// the DOM leaflet-pane that contains our layer\n\t_pane: null,\n\t_paneName: 'overlayPane',\n\n\t_shapesLayer: null,\n\t_linesLayer: null,\n\t_pointssLayer: null,\n\n\t// user options\n\toptions: {\n\t\ttypes: null,\n\t\tgeojson: null\n\t},\n\n\tinitialize: function (options) {\n\t\tL.setOptions(this, options);\n\t},\n\n\t/**\n\t * @param map {Object} Leaflet map\n\t */\n\tonAdd: function (map) {\n\t\t\n\t\tthis._map = map;\n\t\tthis.options.glifyOptions.map = this._map;\n\t\tthis._setPane();\n\t\tthis.options.glifyOptions.pane = this._paneName;\n\n\t\tthis._shapes = [];\n\t\tthis._lines = [];\n\t\tthis._points = [];\n\n\t\tthis._glifyOptions = {\n\t\t\tborder: true,\n\t\t\topacity: 0.2,\n\t\t\tsize: 10,\n\t\t\tcolor(index, feature) {\n\t\t\t\treturn {r: 51/255, g: 136/255, b: 255/255, a: 0};\n\t\t\t}\n\t\t};\n\n\t\tthis._glifyOptions = Object.assign(this._glifyOptions, this.options.glifyOptions);\n\t\t\n\t\t// this.options.glifyOptions.border = true;\n\t\t// this.options.glifyOptions.opacity = 0.2;\n\t\t// if (!this.options.glifyOptions.size) this.options.glifyOptions.size = 10;\n\t\t// this._\n\t\t// if (!this.options.glifyOptions.color) this.options.glifyOptions.color = this._color;\n\n\t\tif(!this.options.types && this.options.geojson) {\n\t\t\t\n\t\t\tthis._separateTypes();\n\t\t\n\t\t} else if(this.options.types) {\n\t\t\n\t\t\tthis._shapes = this.options.types.shapes ?  this.options.types.shapes : {};\n\t\t\tthis._lines = this.options.types.lines ?  this.options.types.lines : {};\n\t\t\tthis._points = this.options.types.points ? this.options.types.points.features.map(f => f.geometry.coordinates) : [];\t\n\t\t\t\n\t\t\tthis._createLayers();\n\t\t\n\t\t} else {\n\t\t\tconsole.error('No geojson or separate types provided.');\n\t\t\treturn false;\n\t\t}\n\t\t\n\t\t// callback\n\t\tif (this.options.onAdd) this.options.onAdd();\n\t},\n\n\t/**\n\t * Remove the pane from DOM, and void pane when layer removed from map\n\t */\n\tonRemove() {\n\t\tthis.remove();\n\t\tif (this.options.onRemove) this.options.onRemove();\n\t},\n\n\t/*------------------------------------ PUBLIC ------------------------------------------*/\n\n\t/**\n\t * Exec update() on each glify layer\n\t */\n\tupdate(data, index) {\n\t\tif (this._shapesLayer) this._shapesLayer.update(data, index);\n\t\tif (this._linesLayer) this._linesLayer.update(data, index);\n\t\tif (this._pointsLayer) this._pointsLayer.update(data, index);\n\t},\n\n\t/** \n\t * Exec remove() on each glify layer\n\t*/\n\tremove(index) {\n\t\tif (this._shapesLayer) this._shapesLayer.remove(index);\n\t\tif (this._linesLayer) this._linesLayer.remove(index);\n\t\tif (this._pointsLayer) this._pointsLayer.remove(index);\n\t},\n\n\t/*------------------------------------ PRIVATE ------------------------------------------*/\n\n\t_createLayers(){\n\n\t\tif(this._shapes.features) {\n\t\t\t\tthis._glifyOptions.data = this._shapes;\t\n\t\t\t\tthis._shapesLayer = L.glify.shapes(this._glifyOptions);\n\t\t}\n\n\t\t// coords for lines and points is inverted..  :`(\n\t\t// https://github.com/robertleeplummerjr/Leaflet.glify/issues/78\n\t\t// https://github.com/danwild/Leaflet.glify.layer/issues/1\n\t\tthis._glifyOptions.latitudeKey = 1;\n\t\tthis._glifyOptions.longitudeKey = 0;\n\n\t\tif(this._lines.features) {\n\t\t\tthis._glifyOptions.data = this._lines;\t\n\t\t\tthis._linesLayer = L.glify.lines(this._glifyOptions);\n\t\t}\n\n\t\tif(this._points.length > 0) {\n\t\t\tthis._glifyOptions.data = this._points;\n\t\t\tthis._pointsLayer = L.glify.points(this._glifyOptions);\n\t\t}\n\t\tif (this.options.onLayersInit) this.options.onLayersInit();\n\n\t\t// restore inversion..\n\t\tthis._glifyOptions.latitudeKey = 0;\n\t\tthis._glifyOptions.longitudeKey = 1;\n\t},\n\n\t/**\n\t * Kick off worker job/s to compute keyframes from features.\n\t */\n\t_separateTypes() {\n\n\t\tconst numWorkers = this.options.numWorkers || window.navigator.hardwareConcurrency;\n\t\t\n\t\t// split features into chunks for worker\n\t\tconst featureChunks = this._chunkArray(this.options.geojson.features, numWorkers);\n\t\t\n\t\tlet running = 0;\n\t\n\t\tconst workerDone = (e) => {\n\t\t\trunning -= 1;\n\t\t\t\n\t\t\t// features\n\t\t\tthis._shapes = this._shapes.concat(e.data.shapes);\n\t\t\tthis._lines = this._lines.concat(e.data.lines);\n\t\t\t\n\t\t\t// coords array..\n\t\t\tthis._points = this._points.concat(e.data.points);\n\t\t\t\n\t\t\tif(running < 1) {\n\t\t\t\tthis._shapes = { type: \"FeatureCollection\", features: this._shapes };\n\t\t\t\tthis._lines = { type: \"FeatureCollection\", features: this._lines };\n\n\t\t\t\tthis._createLayers();\n\n\t\t\t\tif (this.options.onLayersInit) {\n\t\t\t\t\tthis.options.onLayersInit();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n    for(let i = 0; i < numWorkers; i += 1) {\n      running += 1;\n      const tWorker = new sortWorker();\n      tWorker.onmessage = workerDone;\n      tWorker.postMessage({ features: featureChunks[i] });\n\t\t}\n\t},\n\n\t/**\n\t * Create custom pane if necessary\n\t * @private\n\t */\n\t_setPane() {\n\t\t// determine where to add the layer\n\t\tthis._paneName = this.options.paneName || 'overlayPane';\n\n\t\t// fall back to overlayPane for leaflet < 1\n\t\tlet pane = this._map._panes.overlayPane\n\t\tif (this._map.getPane) {\n\t\t\t// attempt to get pane first to preserve parent (createPane voids this)\n\t\t\tpane = this._map.getPane(this._paneName);\n\t\t\tif (!pane) {\n\t\t\t\tpane = this._map.createPane(this._paneName);\n\t\t\t}\n\t\t}\n\n\t\tthis._pane = pane;\n\t},\n\n\t/**\n\t * Divide an array into n chunks\n\t * @param {array} array \n\t * @param {number} parts \n\t */\n\t_chunkArray(array, parts) {\n\t\tlet result = [];\n\t\tfor (let i = parts; i > 0; i--) {\n\t\t\t\tresult.push(array.splice(0, Math.ceil(array.length / i)));\n\t\t}\n\t\treturn result;\n\t}\n\n});\n\nL.glify.layer = function (options) {\n\treturn new GlifyLayer(options);\n};\n\nexport default L.glify.layer;\n\n\n"],"names":["GlifyLayer","L","Layer","extend","_map","_pane","_paneName","_shapesLayer","_linesLayer","_pointssLayer","options","types","geojson","initialize","setOptions","onAdd","map","glifyOptions","_setPane","pane","_shapes","_lines","_points","_glifyOptions","border","opacity","size","color","index","feature","r","g","b","a","Object","assign","_separateTypes","shapes","lines","points","features","f","geometry","coordinates","_createLayers","console","error","onRemove","remove","update","data","_pointsLayer","glify","latitudeKey","longitudeKey","length","onLayersInit","numWorkers","window","navigator","hardwareConcurrency","featureChunks","_chunkArray","running","workerDone","e","concat","type","i","tWorker","sortWorker","onmessage","postMessage","paneName","_panes","overlayPane","getPane","createPane","array","parts","result","push","splice","Math","ceil","layer"],"mappings":"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"}